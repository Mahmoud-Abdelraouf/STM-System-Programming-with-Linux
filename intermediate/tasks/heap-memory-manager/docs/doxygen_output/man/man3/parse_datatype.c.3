.TH "src/parse_datatype.c" 3 "Wed Aug 21 2024" "Linux Memeory Manager" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/parse_datatype.c \- Extracts a data type name from a string containing the sizeof operator\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'parse_datatype\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static bool \fBis_number\fP (const char *str)"
.br
.RI "Checks if a string represents a number\&. "
.ti -1c
.RI "char * \fBparse_struct_name\fP (char *struct_name, char *buffer, uint8_t *error_flag)"
.br
.RI "Parses the name of a struct from a string\&. "
.in -1c
.SH "Detailed Description"
.PP 
Extracts a data type name from a string containing the sizeof operator\&. 

This program demonstrates how to extract a data type name from a string containing the sizeof operator using the sscanf function in C\&. 
.SH "Function Documentation"
.PP 
.SS "static bool is_number (const char * str)\fC [static]\fP"

.PP
Checks if a string represents a number\&. This function checks if the provided string represents a number\&. It allows for digits (0-9) and an optional decimal point\&. It ignores leading and trailing whitespace\&.
.PP
\fBParameters\fP
.RS 4
\fIstr\fP The string to check\&. 
.RE
.PP
\fBReturns\fP
.RS 4
true if the string represents a number, false otherwise\&. 
.RE
.PP

.SS "char* parse_struct_name (char * struct_name, char * buffer, uint8_t * error_flag)"

.PP
Parses the name of a struct from a string\&. This function extracts the name of a struct from a string formatted as 'sizeof(datatype)' and stores it in the provided buffer\&. If the string does not match this format, it checks if the string represents a number and sets the error flag accordingly\&.
.PP
\fBParameters\fP
.RS 4
\fIstruct_name\fP The string containing the sizeof expression\&. 
.br
\fIbuffer\fP Pointer to a buffer where the extracted struct name or integer value will be stored\&. If the struct name is extracted successfully, it will be stored in this buffer\&. If the struct name is a number, the integer value will be stored in this buffer\&. 
.br
\fIerror_flag\fP Pointer to a uint8_t variable to indicate the status of the struct name\&. It can have the following values:
.IP "\(bu" 2
0: No error, struct name extracted successfully\&.
.IP "\(bu" 2
1: Error in the format of the struct name, not in the form 'sizeof(datatype)'\&.
.IP "\(bu" 2
2: The struct name is actually a number, and the integer value is stored in the buffer\&. 
.PP
.RE
.PP
\fBReturns\fP
.RS 4
If the struct name is extracted successfully or it's a number, returns 'int'\&. If an error occurs, returns NULL\&. PARSE_DATATYPE_H_ 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Linux Memeory Manager from the source code\&.
